name: Terraform Azure VM Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to perform (apply or destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

env:
  TF_VERSION: 1.7.5
  TF_WORKING_DIR: infra

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Terraform Init
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config="resource_group_name=devsecops-cloud_group" \
          -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate"

    - name: Terraform Format Check
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: Terraform Plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform plan -var-file="azure.tfvars" \
        -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
        -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
        -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
        -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'apply' && github.ref == 'refs/heads/main' }}
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform apply -var-file="azure.tfvars" -auto-approve \
        -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
        -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
        -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
        -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform destroy -var-file="azure.tfvars" -auto-approve \
        -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
        -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
        -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
        -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
